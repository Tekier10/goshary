generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  USER
  ADMIN
}

model User {
  id                  String    @id @default(cuid())
  name                String?
  email               String?   @unique
  emailVerified       DateTime?
  image               String?
  passwordHash        String?
  role                Role      @default(USER)
  
  accounts            Account[]
  sessions            Session[]
  passwordResetTokens PasswordResetToken[]
  inzeraty            Inzerat[]
  oblibene            Inzerat[] @relation("OblibeneInzeraty")
  notifikace          Notifikace[]
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  token      String   @unique
  expires    DateTime
  uzivatelId String
  uzivatel   User     @relation(fields: [uzivatelId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Inzerat {
  id          String     @id @default(cuid())
  typStranky  String
  typ         String
  titulek     String
  popis       String
  lokalita    String
  kontakt     String
  overeno     Boolean    @default(false)
  hodnoceni   Float      @default(0)
  autorId     String
  autor       User       @relation(fields: [autorId], references: [id], onDelete: Cascade) // <-- PŘIDÁNO
  fotky       Fotka[]
  oblibeno    User[]     @relation("OblibeneInzeraty")
}

model Fotka {
  id        String  @id @default(cuid())
  url       String
  inzerat   Inzerat @relation(fields: [inzeratId], references: [id])
  inzeratId String
}

model Notifikace {
  id         String   @id @default(cuid())
  zprava     String
  datum      DateTime @default(now())
  precteno   Boolean  @default(false)
  uzivatel   User     @relation(fields: [prijemceId], references: [id])
  prijemceId String
}
